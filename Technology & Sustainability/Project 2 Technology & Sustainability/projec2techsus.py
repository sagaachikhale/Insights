# -*- coding: utf-8 -*-
"""Projec2TechSus.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12-7nDmXFTNrm2n9HNcKEN5TgQrBFaH24
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

path = '/content/drive/MyDrive/Project 2/Technology & Sustainability/train.csv'
df = pd.read_csv(path)
df.head(1)

df['Date'][0]

df['Date'][0].split('-')[1]

months = []
for i in df['Date']:
  months.append(i.split('-')[1])  #extracting months
df['Months'] = months #new column with months
df.head(1)

df['Price']=df['Revenue']/df['Units_Sold']
df.head(1)

################################################################################################################################################################################

"""# **Which brands are popular in each region**"""

brand_popularity = df.pivot_table(index='Region',columns='Brand',values='Units_Sold',aggfunc='sum',fill_value=0)

brand_popularity

brand_popularity.plot( kind='bar', stacked=True, figsize=(12, 6),colormap='tab20')

plt.title('EV Brand Popularity by Region (Units Sold)')
plt.xlabel('Region')
plt.ylabel('Total Units Sold')
plt.legend(title='Brand')
plt.tight_layout()
plt.show()

plt.figure(figsize=(12, 6))
sns.heatmap(brand_popularity, annot=True, fmt="d", cmap='YlGnBu', linewidths=.5)

plt.title('EV Brand Popularity by Region (Units Sold)')
plt.xlabel('Brand')
plt.ylabel('Region')
plt.tight_layout()
plt.show()

"""# **Which Vehicle_Type are popular in each region**"""

vechile_type_popularity = df.pivot_table(index='Region',columns='Vehicle_Type',values='Units_Sold',aggfunc='sum',fill_value=0)

vechile_type_popularity

vechile_type_popularity.plot(kind='bar', stacked=True,figsize=(12, 6),colormap='Set2')

plt.title('EV Vehicle Type Popularity by Region (Units Sold)')
plt.xlabel('Region')
plt.ylabel('Total Units Sold')
plt.legend(title='Vehicle Type')
plt.tight_layout()
plt.show()

"""# **Which Region had more EV sales to check which are leading or lagging in EV adoption**"""

df.groupby(['Region'])['Units_Sold'].sum().plot(kind='bar')
plt.title('EV Adoption Across Six Region')
plt.xlabel('Region')
plt.ylabel('Units_Sold')
plt.show()

"""# **Brands vs fast charing available or not**"""

df.head(1)

brand_fast_charge = df.pivot_table( index='Brand', columns='Fast_Charging_Option', values='Units_Sold',aggfunc='sum', fill_value=0)
brand_fast_charge

brand_fast_charge.plot(kind='bar', figsize=(12, 6))

plt.title('Units Sold by Brand and Fast Charging Option')
plt.xlabel('Brand')
plt.ylabel('Units Sold')
plt.legend(title='Fast Charging Option')
plt.xticks(rotation=45)
plt.tight_layout()

plt.show()

"""# **Brand vs Revenue made and Units Sold in 2023**"""

a = df.pivot_table( index='Brand', values='Revenue',aggfunc='mean',fill_value=0)
a

df.groupby(['Brand'])['Revenue'].mean().plot(kind='bar')
plt.title('Average Revenue per Brand in 2023')
plt.xlabel('Brand')
plt.ylabel('Revenue')
plt.show()

b = df.pivot_table( index='Brand', values='Units_Sold',aggfunc='sum', fill_value=0)
b

df.groupby(['Brand'])['Units_Sold'].sum().plot(kind='bar')
plt.title('Units Sold by Brand in 2023')
plt.xlabel('Brand')
plt.ylabel('Units_Sold')
plt.show()

c = pd.concat([b,a],axis=1)
c

"""# **Customer Segment vs brand around the world**"""

segment_brand = df.pivot_table( index='Customer_Segment',columns='Brand',values='Units_Sold',aggfunc='sum',fill_value=0)
segment_brand
#

"""# **Region wise understanding the reason behind perchasing EV cars. This may give essence of factors people are considering while making purchase. The first analysis is done on North America(highest EV sold) then segment wise. Second analysis on Eroupe (Least EV sold) then segment wise.**"""

df['Region'].unique()

df['Customer_Segment'].unique()

xx = pd.DataFrame(df.loc[(df['Customer_Segment']=='Budget Conscious') & (df['Region']=='Europe')])
xx.head(1)

xx.info()

xx.pivot_table( index='Brand', values='Units_Sold', aggfunc='sum', fill_value=0)

xx['Units_Sold'].corr(xx['Battery_Capacity_kWh'])

xx['Units_Sold'].corr(xx['Discount_Percentage'])

xx['Units_Sold'].corr(xx['Price'])